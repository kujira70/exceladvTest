PS C:\codes\JS\excel-advdata-test> http-server
Starting up http-server, serving ./

http-server version: 14.1.1

http-server settings:
CORS: disabled
Cache: 3600 seconds
Connection Timeout: 120 seconds
Directory Listings: visible
AutoIndex: visible
Serve GZIP Files: false
Serve Brotli Files: false
Default File Extension: none

Available on:
  http://192.168.3.11:8080
  http://127.0.0.1:8080
  http://172.28.112.1:8080
Hit CTRL-C to stop the server

> [2023-10-01T23:07:49.033Z]  "GET /" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36"
(node:18632) [DEP0066] DeprecationWarning: OutgoingMessage.prototype._headers is deprecated
(Use `node --trace-deprecation ...` to show where the warning was created)
[2023-10-01T23:07:49.108Z]  "GET /game-browser.js" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36"
[2023-10-01T23:07:49.537Z]  "GET /favicon.ico" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36"
[2023-10-01T23:07:49.545Z]  "GET /favicon.ico" Error (404): "Not found"

 *  History restored 

PS C:\codes\JS\excel-advdata-test> http-server
Starting up http-server, serving ./

http-server version: 14.1.1

http-server settings:
CORS: disabled
Cache: 3600 seconds
Connection Timeout: 120 seconds
Directory Listings: visible
AutoIndex: visible
Serve GZIP Files: false
Serve Brotli Files: false
Default File Extension: none

Available on:
  http://127.0.0.1:8080
  http://172.28.112.1:8080
Hit CTRL-C to stop the server

////////////////////////////////////

class GameParser {
    constructor(file) {
        this.file = file;
        this.gameData = [];
        this.currentScene = null;
        this.readExcel();
    }

    readExcel() {
        const reader = new FileReader();
        reader.onload = (event) => {
            const data = new Uint8Array(event.target.result);
            const workbook = XLSX.read(data, { type: 'array' });
            const sheetName = workbook.SheetNames[0];
            this.gameData = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName]);
            this.startGame();
        };
        reader.readAsArrayBuffer(this.file);
    }

    // ... [rest of the GameParser class remains unchanged]
}

function startGame() {
    const fileInput = document.getElementById('excelFile');
    if (fileInput.files.length === 0) {
        alert('Please select an Excel file first.');
        return;
    }
    const file = fileInput.files[0];
    const game = new GameParser(file);
}

//////////////////////
// ... (rest of the code remains unchanged)

// Start the game from the first scene
startGame() {
    // Check if a file has been selected
    if (!this.file) {
        console.error("No Excel file selected. Please select a file to start the game.");
        return;
    }

    const reader = new FileReader();
    reader.onload = (event) => {
        const data = new Uint8Array(event.target.result);
        const workbook = XLSX.read(data, { type: 'array' });
        this.processExcelData(workbook);
        this.displayScene();
    };
    reader.readAsArrayBuffer(this.file);
}

// ... (rest of the code remains unchanged)
